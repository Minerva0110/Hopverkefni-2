import { Request, Response } from "express";
import prisma from "../models/db.js";

// S칝kja 칬ll verkefni (items)
export const getItems = async (req: Request, res: Response) => {
  try {
    const items = await prisma.item.findMany({
      orderBy: { due: "asc" }, // S칳na n칝stu verkefni fyrst
    });
    res.json(items);
  } catch (error) {
    console.error("丘멆잺 Villa vi칧 a칧 s칝kja verkefni:", error);
    res.status(500).json({ error: "Mist칩kst a칧 s칝kja verkefni" });
  }
};

// S칝kja eitt verkefni eftir ID
export const getItemById = async (req: Request, res: Response) => {
  try {
    const { id } = req.params;
    const item = await prisma.item.findUnique({ where: { id: Number(id) } });

    if (!item) {
      return res.status(404).json({ error: "Verkefni ekki fundi칧" });
    }

    res.json(item);
  } catch (error) {
    console.error("丘멆잺 Villa vi칧 a칧 s칝kja eitt verkefni:", error);
    res.status(500).json({ error: "Mist칩kst a칧 s칝kja verkefni" });
  }
};

// B칰a til n칳tt verkefni
export const createItem = async (req: Request, res: Response) => {
  try {
    const { title, description, priority, due } = req.body;

    if (!title || title.trim() === "") {
      return res.status(400).json({ error: "Titill m치 ekki vera au칧ur" });
    }

    const newItem = await prisma.item.create({
      data: {
        title,
        description: description || "",
        priority: priority || false,
        due: due ? new Date(due) : null,
        completed: false, // Byrjar 칩kl치ra칧
      },
    });

    console.log("Verkefni b칰i칧 til:", newItem);
    res.status(201).json(newItem);
  } catch (error) {
    console.error("Villa vi칧 a칧 b칰a til verkefni:", error);
    res.status(500).json({ error: "Mist칩kst a칧 b칰a til verkefni" });
  }
};

// Uppf칝ra verkefni (h칝gt a칧 haka vi칧 sem kl치ra칧)
export const updateItem = async (req: Request, res: Response) => {
  try {
    const { id } = req.params;
    const { title, description, priority, completed } = req.body;

    const existingItem = await prisma.item.findUnique({ where: { id: Number(id) } });
    if (!existingItem) {
      return res.status(404).json({ error: "Verkefni ekki fundi칧" });
    }

    const updatedItem = await prisma.item.update({
      where: { id: Number(id) },
      data: {
        title: title ?? existingItem.title,
        description: description ?? existingItem.description,
        priority: priority ?? existingItem.priority,
        completed: completed ?? existingItem.completed,
      },
    });

    console.log("Verkefni uppf칝rt:", updatedItem);
    res.json(updatedItem);
  } catch (error) {
    console.error("Villa vi칧 a칧 uppf칝ra verkefni:", error);
    res.status(500).json({ error: "Mist칩kst a칧 uppf칝ra verkefni" });
  }
};

// 游딈 Ey칧a verkefni
export const deleteItem = async (req: Request, res: Response) => {
  try {
    const { id } = req.params;

    const existingItem = await prisma.item.findUnique({ where: { id: Number(id) } });
    if (!existingItem) {
      return res.status(404).json({ error: "Verkefni ekki fundi칧" });
    }

    await prisma.item.delete({ where: { id: Number(id) } });
    console.log("游딈 Verkefni eytt me칧 ID:", id);
    res.status(204).send();
  } catch (error) {
    console.error("Villa vi칧 a칧 ey칧a verkefni:", error);
    res.status(500).json({ error: "Mist칩kst a칧 ey칧a verkefni" });
  }
};
